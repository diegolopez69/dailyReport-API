swagger: "2.0"
info:
  description: "This is an API for the university to mantain a better controll of the inventory and generate the reports."
  version: "1.0.0"
  title: "Daily Reports API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "herramienta"
  description: "Todas las cosas que formen parte del inventario."
  externalDocs:

    url: "http://swagger.io"
- name: "aula"
  description: "Access to the information about the aulas"
- name: "ordenador"
  description: "Operations about Information about the ordenadores"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:

- "http"
paths:
  /herramienta:
    post:
      tags:
      - "herramienta"
      summary: "Acá se puede realizar un crud de todas las herramientas."
      description: "Acá debe de ir una descripción sobre lo que se está haciendo."
      operationId: "addHeramienta"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "El método permite añadir una nueva herramienta a la aplicación."
        required: true
        schema:
          $ref: "#/definitions/Herramienta"
      responses:
        "201":
          description: "Se creó con éxito la nueva herramienta dentro del sistema."
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
     
    get:
      tags:
      - "herramienta"
      summary: "Obtener todas las herramientas."
      description: "Returns all of the herramientas."
      operationId: "getHerramienta"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "El método permite obtener todas las herramientas."
        required: true
        schema:
          $ref: "#/definitions/Herramienta"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Herramienta"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Herramientas not found"        
 
  /herramienta/{herramientaId}:
    get:
      tags:
      - "herramienta"
      summary: "Obtener una herramienta por Id."
      description: "Returns a single herramienta"
      operationId: "getHerramientaById"
      produces:
      - "application/json"
      parameters:
      - name: "herramientaId"
        in: "path"
        description: "ID of herramienta to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Herramienta"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Herramienta not found"

 
    delete:
      tags:
      - "herramienta"
      summary: "Deletes a herramienta"
      description: ""
      operationId: "deleteHerramienta"
      produces:

      - "application/json"
      parameters:
      - name: "herramientaId"
        in: "path"
        description: "Herramienta id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Herramienta not found"

    put:
      tags:
      - "herramienta"
      summary: "Updates herramienta by Id"
      description: ""
      operationId: "putHerramienta"
      produces:

      - "application/json"
      parameters:
      - name: "herramientaId"
        in: "path"
        description: "Update Herramienta id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Herramienta"
      
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Herramienta not found"        
  
  /aula:
    get:
      tags:
      - "aula"
      summary: "Returns the aulas"
      description: "Returns a map of status codes to quantities"
      operationId: "getInventory"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - api_key: []

    post:
      tags:
      - "aula"
      summary: "Create an aula"
      description: ""
      operationId: "placeAula"
      produces:

      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "You created an aula"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid Order"

  /aula{aulaId}:
    get:
      tags:
      - "aula"
      summary: "Find an aula by ID"
      description: "Find one aula by its Id"
      operationId: "getAulaById"
      produces:
      - "application/json"
      parameters:
      - name: "aulaId"
        in: "path"
        description: "ID of aula that needs to be fetched"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Aula"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
  
    delete:
      tags:
      - "aula"
      summary: "Deletes an aula"
      description: "Deletes one aula by its Id"
      operationId: "deleteAula"
      produces:

      - "application/json"
      parameters:
      - name: "aulaId"
        in: "path"
        description: "aula id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Aula not found"
    put:
      tags:
      - "aula"
      summary: "Updates aula by Id"
      description: ""
      operationId: "putAula"
      produces:

      - "application/json"
      parameters:
      - name: "aulaId"
        in: "path"
        description: "Update Aula id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Herramienta"
      
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Herramienta not found"        
            
  /ordenador:
    post:
      tags:
      - "ordenador"
      summary: "Create an ordenador"
      description: "This can only be done by the logged in user."
      operationId: "createOrdenador"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created ordenador object"
        required: true
        schema:
          $ref: "#/definitions/Ordenador"
      responses:
        default:
          description: "successful operation"

    get:
      tags:
      - "ordenador"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"

  /ordenador{ordenadorId}:
    get:
      tags:
      - "ordenador"
      summary: "Get ordenador by Id"
      description: ""
      operationId: "getOrdenadorById"
      produces:
      - "application/json"
      parameters:
      - name: "ordenadorId"
        in: "path"
        description: "The Id for the ordenador that needs to be fetched"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Ordenador"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "Ordenador not found"

    put:
      tags:
      - "ordenador"
      summary: "Updated ordenador"
      description: "Update one ordenador by Id"
      operationId: "updateOrdenador"
      produces:
      - "application/json"
      parameters:
      - name: "ordenadorId"
        in: "path"
        description: "ordenador that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Ordenador"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
      - "ordenador"
      summary: "Delete ordenador"
      description: "Delete one ordenador by its Id"
      operationId: "deleteOrdenador"
      produces:
      - "application/json"
      parameters:
      - name: "ordenadorId"
        in: "path"
        description: "The ordenador that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Ordenador not found"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
      
  Ordenador:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "Ordenador Status"
    xml:
      name: "Ordenador"
      
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
      
      
      
  Herramienta:
    type: "object"
    required:
    - "id"
    - "type"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "12"
      nombre:
        type: "string"
        example: "Sara"
      Tipo:
        type: "integer"
        example: "1"
    xml:
      name: "Herramienta"
      
  Aula:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "Holis"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Aula"
      
      
      
      
      
      
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"